name: GitHub Release

on:
  push:
    # branches:
    #   - main

jobs:
  latest_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest release version
        id: latest_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name){
                latestRelease {
                  tagName
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
            }
            const result = await github.graphql(query, variables)
            console.log(result.repository)
            console.log(result.repository.latestRelease.tagName)
            echo "latest_release=${result.repository.latestRelease.tagName}" >> $GITHUB_OUTPUT 
          
      - name: Increment version
        id: increment_version
        run: |
          current_version="${{steps.latest_release.outputs.latest_release}}"
          echo "Current version: $current_version"
          # Increment the version
          NEW_VERSION=$(echo $current_version | awk -F "." '{print $1 "." $2 "." $3+1}')
          echo "New version: $NEW_VERSION"
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: "actions/create-release@v1"
        with:
           tag_name: ${{ steps.increment_version.outputs.NEW_VERSION }}
           release_name: Release ${{ steps.increment_version.outputs.NEW_VERSION }}
           body: Release ${{ steps.increment_version.outputs.NEW_VERSION }}
           draft: false
           prerelease: false
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
